


1. Describe the problem generics address.
	- generic address type safety and code reusability, by allowing developers to 
	avoid type casting erros and reduces code duplication.
2. How would you create a list of strings, using the generic List class?
	- List<string> list = new List<string>();
	using List<T> like above and calling the method list.Add() to add elements to the list
3. How many generic type parameters does the Dictionary class have?
	- Dictionary class has two types parameters Tkey and TValue.
4. True/False. When a generic class has multiple type parameters, they must all match.
	- False
5. What method is used to add items to a List object?
	- name.Add(item) to add items to a list.
6. Name two methods that cause items to be removed from a List.
	- the .Clear() and .Remove(item), .Clear() will remove all items and .Remove(item) will remove a single item.  
7. How do you indicate that a class has a generic type parameter?
	- by using angle brackets like so <T>, which can be placed next to class name.
8. True/False. Generic classes can only have one generic type parameter.
	- False can have more than one.
9. True/False. Generic type constraints limit what can be used for the generic type.
	- True constraints can limit to one specific type.
10. True/False. Constraints let you use the methods of the thing you are constraining to.
	- True 

